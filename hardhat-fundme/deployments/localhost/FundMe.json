{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7d5e6eb3e3fe40da998eaef248d3a6ec70f44af714d97f17a7b8012e5effcfd6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "852181",
    "logsBloom": "0x
    "blockHash": "0x8174abdce68f814ae631657871bd15c4673f16c36748b791ef3dac8fc87bd320",
    "transactionHash": "0x7d5e6eb3e3fe40da998eaef248d3a6ec70f44af714d97f17a7b8012e5effcfd6",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "852181",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ed16c5a30f5583bd2049cc6b58e994c1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Sai kumar\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n//pragma\\npragma solidity ^0.8.11;\\n//imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n//get funds from users\\n//withdraw funds\\n//set minimum funding valuein USD\\n//756611\\n//736642\\n//736630\\n//713483\\nerror FundMe_NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Sai kumar\\n * @notice This contract is to demo a sample funding contract\\n */\\n\\ncontract FundMe {\\n    //Type Declaration\\n    using PriceConverter for uint;\\n\\n    //state varaible\\n    uint public constant MIN_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    //this is used to check some condition without recreating multiple times\\n    modifier only_i_owner() {\\n        // require(msg.sender == i_owner,\\\" Sender is not i_owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        //below is to execute other code of the function\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConverstionRate(priceFeed) > MIN_USD,\\n            \\\"you need to spend more ETH! \\\"\\n        ); // 1e18 = 1*10**18 == 1000000000000000\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public only_i_owner {\\n        for (\\n            uint funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n\\n        //call to send ether\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xcf30da680cdd596edd6f4869ab9fce12385c49adbfe953c69cfab4a1584074bf\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)internal  view returns(uint){\\n     //address 0x447Fd5eC2D383091C22B8549cb231a3bAD6d3fAf\\n     //ABI \\n    (,int price,,,) = priceFeed.latestRoundData();\\n    //ETH in terms of USD\\n    return uint(price * 1e10); // 1**10 == 10000000000\\n  }\\n  function getConverstionRate(uint ethAmount,AggregatorV3Interface priceFeed) internal  view returns (uint) {\\n    uint ethPrice = getPrice(priceFeed);\\n    uint ethAmountInUsd = (ethPrice * ethAmount) /1e18;\\n    return  ethAmountInUsd;\\n  }\\n}\",\"keccak256\":\"0x82bccb70a5c65a03d98a7f0a979111ca1c46c507430f44b48bc9b08ff8836e22\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f67380380610f6783398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610e0861015f600039600081816102e0015261055e0152610e086000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061074c565b60405180910390f35b3480156100c457600080fd5b506100cd6102de565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107ca565b61051e565b604051610103919061074c565b60405180910390f35b34801561011857600080fd5b50610121610536565b60405161012e9190610856565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055c565b6040516101639190610880565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c7565b610580565b6040516101a09190610880565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bf90919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610951565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610363576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040e57600080828154811061038857610387610971565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610406906109cf565b915050610366565b50600067ffffffffffffffff81111561042a57610429610a18565b5b6040519080825280602002602001820160405280156104585781602001602082028036833780820191505090505b506000908051906020019061046e92919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049590610a78565b60006040518083038185875af1925050503d80600081146104d2576040519150601f19603f3d011682016040523d82523d6000602084013e6104d7565b606091505b505090508061051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610ad9565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cb836105fb565b90506000670de0b6b3a764000085836105e49190610af9565b6105ee9190610b82565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c40565b5050509150506402540be400816106849190610cbb565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b6000819050919050565b61074681610733565b82525050565b6000602082019050610761600083018461073d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107978261076c565b9050919050565b6107a78161078c565b81146107b257600080fd5b50565b6000813590506107c48161079e565b92915050565b6000602082840312156107e0576107df610767565b5b60006107ee848285016107b5565b91505092915050565b6000819050919050565b600061081c6108176108128461076c565b6107f7565b61076c565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a8161078c565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a481610733565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610767565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f796f75206e65656420746f207370656e64206d6f726520455448212000000000600082015250565b600061093b601c836108f4565b915061094682610905565b602082019050919050565b6000602082019050818103600083015261096a8161092e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109da82610733565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0d57610a0c6109a0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a62600083610a47565b9150610a6d82610a52565b600082019050919050565b6000610a8382610a55565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac3600b836108f4565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b6000610b0482610733565b9150610b0f83610733565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4857610b476109a0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b8d82610733565b9150610b9883610733565b925082610ba857610ba7610b53565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd281610bb3565b8114610bdd57600080fd5b50565b600081519050610bef81610bc9565b92915050565b6000819050919050565b610c0881610bf5565b8114610c1357600080fd5b50565b600081519050610c2581610bff565b92915050565b600081519050610c3a8161089b565b92915050565b600080600080600060a08688031215610c5c57610c5b610767565b5b6000610c6a88828901610be0565b9550506020610c7b88828901610c16565b9450506040610c8c88828901610c2b565b9350506060610c9d88828901610c2b565b9250506080610cae88828901610be0565b9150509295509295909350565b6000610cc682610bf5565b9150610cd183610bf5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1057610d0f6109a0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4d57610d4c6109a0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8a57610d896109a0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dc757610dc66109a0565b5b82820290509291505056fea2646970667358221220c177fd8515cf6434356f92f9b8360a649640d3b387c9278f9b96e7d08715db5464736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063213dbea21461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061074c565b60405180910390f35b3480156100c457600080fd5b506100cd6102de565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107ca565b61051e565b604051610103919061074c565b60405180910390f35b34801561011857600080fd5b50610121610536565b60405161012e9190610856565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055c565b6040516101639190610880565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c7565b610580565b6040516101a09190610880565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bf90919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610951565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610363576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040e57600080828154811061038857610387610971565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610406906109cf565b915050610366565b50600067ffffffffffffffff81111561042a57610429610a18565b5b6040519080825280602002602001820160405280156104585781602001602082028036833780820191505090505b506000908051906020019061046e92919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049590610a78565b60006040518083038185875af1925050503d80600081146104d2576040519150601f19603f3d011682016040523d82523d6000602084013e6104d7565b606091505b505090508061051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051290610ad9565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cb836105fb565b90506000670de0b6b3a764000085836105e49190610af9565b6105ee9190610b82565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c40565b5050509150506402540be400816106849190610cbb565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b6000819050919050565b61074681610733565b82525050565b6000602082019050610761600083018461073d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107978261076c565b9050919050565b6107a78161078c565b81146107b257600080fd5b50565b6000813590506107c48161079e565b92915050565b6000602082840312156107e0576107df610767565b5b60006107ee848285016107b5565b91505092915050565b6000819050919050565b600061081c6108176108128461076c565b6107f7565b61076c565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a8161078c565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a481610733565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610767565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f796f75206e65656420746f207370656e64206d6f726520455448212000000000600082015250565b600061093b601c836108f4565b915061094682610905565b602082019050919050565b6000602082019050818103600083015261096a8161092e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109da82610733565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0d57610a0c6109a0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a62600083610a47565b9150610a6d82610a52565b600082019050919050565b6000610a8382610a55565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac3600b836108f4565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b6000610b0482610733565b9150610b0f83610733565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4857610b476109a0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b8d82610733565b9150610b9883610733565b925082610ba857610ba7610b53565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd281610bb3565b8114610bdd57600080fd5b50565b600081519050610bef81610bc9565b92915050565b6000819050919050565b610c0881610bf5565b8114610c1357600080fd5b50565b600081519050610c2581610bff565b92915050565b600081519050610c3a8161089b565b92915050565b600080600080600060a08688031215610c5c57610c5b610767565b5b6000610c6a88828901610be0565b9550506020610c7b88828901610c16565b9450506040610c8c88828901610c2b565b9350506060610c9d88828901610c2b565b9250506080610cae88828901610be0565b9150509295509295909350565b6000610cc682610bf5565b9150610cd183610bf5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1057610d0f6109a0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4d57610d4c6109a0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8a57610d896109a0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dc757610dc66109a0565b5b82820290509291505056fea2646970667358221220c177fd8515cf6434356f92f9b8360a649640d3b387c9278f9b96e7d08715db5464736f6c634300080b0033",
  "devdoc": {
    "author": "Sai kumar",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}